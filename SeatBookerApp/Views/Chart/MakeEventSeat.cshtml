@model SeatBookerApp.Models.All


@{
    ViewBag.Title = "ShowSeats";
}

@{
    int index = (int)ViewData["i"];

    var item = Model.chart2.ElementAt(index);
    int row = (int)item.Seat_Row;
    int column = (int)item.Seat_Column;


    string row_division = item.Row_Div_No;
    string[] row_div = row_division.Split(',');


    string column_division = item.Col_Div_No;
    string[] col_div = column_division.Split(',');


}

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seat Generator</title>

    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Abel">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700">
    <link rel="stylesheet" href="~/Content/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/css/styles4.min.css">
    <link rel="stylesheet" href="~/fonts/font-awesome.min.css" />

    <style >
        #example {
            width:100%;
        }
    </style>
</head>


   
    
<body>

    <button class="btn btn-flat" style="background-color:rgb(230,230,230);" onclick="@("window.location.href='" + @Url.Action("AvailableEvents", "Chart") + "'")"><i class="fa fa-arrow-left"></i></button>

    <table id="example" class="table table-striped table-bordered" cellspacing="0" >
        <thead>
            <tr>
                <th>User Name</th>
                <th>Event Name</th>
                <th>Position</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
             @{ 
             List<Seating> userFound = Model.seating2.Where(c => c.Event_Name == (string)ViewData["Name"]).ToList();
            }
             @for (int count = 0; count < userFound.Count(); count++)
             {
            <tr>


                @{
                    <td>
                        @{


                            if (userFound != null)
                            {
                                @userFound.ElementAt(count).User_Name
                            }

                        }

                    </td>




                    <td>

                        @{


                            if (userFound != null)
                            {
                                @userFound.ElementAt(count).Event_Name
                            }

                        }

                    </td>
                    <td>
                        @{


                            if (userFound != null)
                            {
                                @userFound.ElementAt(count).Hold_Places
                            }

                        }


                    </td>


                    <td>

                        @{
                            string userNameCurr = userFound.ElementAt(count).User_Name;

                        }
                        @Html.ActionLink("Delete", "MakeEventSeat", new { userNameCurr, i = (int)ViewData["i"], Name = ViewData["Name"] }, new { @class = "btn btn-primary", onclick = "return confirm('If you are sure to delete this user press Yes ');" })
                    </td>

                }
            </tr>
                        }
        </tbody>
    </table>
    <script src="assets/js/jquery.min.js"></script>
    <script src="assets/bootstrap/js/bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap.min.js"></script>
</body>
</html>


